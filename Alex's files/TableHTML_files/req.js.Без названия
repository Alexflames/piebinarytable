var data = { 
  numString: '', 
  findClosestSquare: function(steps) { 
    for (var i = 1; i < 13; i++) { // Поставить ограничение на количество шагов! 
      if (i * i >= steps || i === 13) { 
        return i; 
      } 
    } 
  }, 
  cells: [], 
  squareSide: 0
}; 

// Функция замены символа в строке
function setCharAt(str,index,chr) { 
    if(index > str.length-1) return str;
    return str.substr(0,index) + chr + str.substr(index+1);
}

// Если заменить numstring.length на squareSide, то таблица будет полной 
function createCells(thisData) { 
  for (var i = 0 ; i < thisData.numString.length; i++){ 
    var newBox = document.createElement('td');
    var myCellIndex = i;
    newBox.myCellIndex = myCellIndex;
    thisData.cells.push(newBox); 
  } 
} 

// функция срабатывает при клике. Изменяет у ячейки на которую нажали цифру
// Затем вызывает обновление прогресса
var titleAndProgress = document.querySelectorAll('caption')[0];
var titleWithoutProgress = titleAndProgress.innerHTML;

function changeNumber() { 
  if (this.innerHTML === "1") {
    this.innerHTML = "0";
    data.numString = setCharAt(data.numString, this.myCellIndex, '0');
  }
  else {
    this.innerHTML = "1";
    data.numString = setCharAt(data.numString, this.myCellIndex, '1');
  }
	 calculateProgressString(titleWithoutProgress);
} 

// создание таблицы из ячеек 
function createTable(cellTable, thisData) { 
  thisData.squareSide = thisData.findClosestSquare(thisData.numString.length); 
  for (var j = 0 ; j < thisData.squareSide; j++){ 
    var tableRow = document.createElement('tr'); 
    cellTable.appendChild(tableRow); 
    for (var i = 0; i < thisData.squareSide; i++) { 
      var realI = j * thisData.squareSide + i; 
      var showBox = thisData.cells[realI]; 
      var textToShow = thisData.numString[realI]; 
      if (textToShow){ 
        showBox.appendChild(document.createTextNode(textToShow)); 
        tableRow.appendChild(showBox); 
      } 
    } 
  } 
} 

// создание строки из 0 если java не настроена
function stringGoalProgressInit(n) {
  for (var i = 0; i < n; i++) {
    data.numString = data.numString + '0';
  }
}

function makeButtons() {
  var elementList = data.cells;
  for (var i = 0; i < elementList.length; i++) {
    elementList[i].addEventListener('click', changeNumber);
  }
}

// Превращаем неизменяемую java-строку в js-строку
function convertJavaString(stringToConvert) {
  var stringToReturn = "";
  for (var i = 0; i < stringToConvert.length; i++) {
    stringToReturn = stringToReturn + stringToConvert[i];
  }
  return string;
}

function convertStringToJson (stringToConvert) {
  var JsonObject = JSON.stringify(stringToConvert);
}

////////////////////////////////////////////////////////////////


// Количество подзадач
var isJavaEnabled = 0;
if (!isJavaEnabled) {
  var goalNumber = 25;
  stringGoalProgressInit(goalNumber);
}
else {
  var getJson = JSON.parse();
  data.numString = convertJavaString(getJson.currentState); // формат?????
}

// изменяется title так, чтобы он учитывал прогресс
function calculateProgressString(original) {
  var onesCount = 0;
  for (var i = 0; i < data.numString.length; i++) {
    if (data.numString[i] === '1') {
      onesCount++;
    }
  }
  titleAndProgress.innerHTML = titleWithoutProgress + ' (' + onesCount + '/' + data.numString.length + ')';
}

//==============================================//
//==============Запуск скриптов==================//
//==============================================//
calculateProgressString(titleWithoutProgress);
var cellTable = document.querySelector('table'); 
createCells(data); 
createTable(cellTable, data);
makeButtons();



// var angryButton = document.querySelector('.yelling'); 
// angryButton.addEventListener('click', spawnBox); 
// var angryButtonPos = angryButton.getBoundingClientRect(); 

// var boxWithButton = document.querySelector('.box1'); 


// function spawnBox() { 
// var floatingPopBox = document.createElement('div'); 
// floatingPopBox.position = 'absolute'; 
// console.log(angryButtonPos.left); 
// console.log(floatingPopBox.style.left) 
// floatingPopBox.style.marginLeft = angryButtonPos.left + 'px'; 
// floatingPopBox.style.marginTop = angryButtonPos.top - boxWithButton.top + 'px'; 

// console.log(floatingPopBox.style.left); 

// var floatingBoxText = document.createTextNode('You are awesome!'); 
// floatingPopBox.appendChild(floatingBoxText); 
// boxWithButton.appendChild(floatingPopBox); 
// }